import os
from pathlib import Path
import pandas as pd

configfile: "../config/config.json"

with open("SRR_id.txt") as f:
    id_list = f.read().splitlines()

df = pd.read_csv('data/comparisons.tsv', sep='\t')

comp_list = [f"{cdn1}-{cdn2}" for cdn1, cdn2 in zip(df['cdn1'], df['cdn2'])]
comp_str = ''.join(map(str, comp_list))
comp_str = comp_str.replace(' ', '', 1)
comp_str = comp_str.replace(' - ', '-')
comp_str = comp_str.replace(' ', '', 1)
comparisons = comp_str

include: "rules/download_all.smk"
include: "rules/common_seq.smk"
include: "rules/dge_analysis.smk"
include: "rules/tgirt_seq.smk"
include: "rules/splicing.smk"

rule all:
    input:
        qc_fq1_out = expand("data/qc/{id}_1_fastqc.html", id = id_list),
        trimm_fq2 = expand("data/trimmed/{id}_2.fastq.gz", id = id_list),
        qc_trimm_fq2_out = expand("data/qc_trimmed/{id}_2_fastqc.html", id = id_list),
        chrNameLength = config['path']['chrNameLength'],
        bam = expand("results/STAR/{id}/Aligned.sortedByCoord.out.bam", id = id_list),
        bam_logs = expand("results/STAR/{id}/Log.final.out", id = id_list)

rule all_downloads:
    input:
        fake_output_fastq = expand('data/references/geo_download.txt'),
        coco_dependency_download = "scripts/pairedBamToBed12/",
        coco_git = 'git_repos/coco',
        go_obo = 'data/references/GO/go-basic.obo',
        go_gaf = 'data/references/GO/goa_human_rna.gaf'


rule dge:
    input:
        transcriptome = "data/references/transcriptome.fa",
        kallisto_index = "data/references/kallisto.idx",
        kallisto_quant = expand("results/dge/kallisto/{id}/abundance.tsv", id = id_list),
        tx2gene = "data/references/tx2gene.tsv",
        pc_gtf = "data/references/gtf/hg38_Ensembl_V101_Scottlab_2020.protein_coding.gtf",
        tpm = "results/dge/kallisto/tpm.tsv",
        deseq2 = expand('results/dge/deseq2/{comp}.csv', comp = comparisons),
        volcano = expand("results/dge/volcano_plot/{comp}.svg", comp = comparisons)
#        GO_analysis_upregulated_genes = expand("results/dge/GO/GO_{comp}_upregulated_genes.svg", comp = comparisons) #BESOIN D'INTERNET: PROFIL LOCAL

rule tgirt:
    input:
        gtf_corrected = "data/references/gtf/hg38_Ensembl_V101_Scottlab_2020_correct_annotation.gtf",
        coco_cc = expand("results/tgirt/coco_cc/{id}.tsv", id = id_list),
        merged_counts = "results/tgirt/coco_cc/merged_counts.tsv",
        unsorted_bedgraph = expand("results/tgirt/coco_cb/{id}_unsorted.bedgraph", id = id_list),
        sorted_bedgraph = expand("results/tgirt/coco_cb/{id}.bedgraph", id = id_list)


rule splicing:
    input:
        primary_alignments = expand("results/splicing/star/{id}/{id}_Aligned.sortedByCoord.out.primary.bam", id = id_list),
        bam_index = expand("results/splicing/star/{id}/{id}_Aligned.sortedByCoord.out.primary.bam.bai", id = id_list),
        genomecov = expand("results/splicing/genomecov/{id}.bedgraph", id = id_list),
        majiq_build = "results/splicing/majiq/build/splicegraph.sql"
#        majiq_deltapsi_quant = "results/splicing/majiq/deltapsi_quant.deltapsi.voila"
